import streamlit as st
import pandas as pd
import folium
from streamlit_folium import st_folium
import random

# dummy marker locations, this will be our top 20 gage_ids

cities = {
    'Los Angeles': (34.052235, -118.243683),
    'San Francisco': (37.774929, -122.419418),
    'San Diego': (32.715736, -117.161087),
    'Sacramento': (38.581573, -121.4944),
    'San Jose': (37.338208, -121.886329),
    'Fresno': (36.746841, -119.772591),
    'Oakland': (37.804363, -122.271111),
    'Long Beach': (33.77005, -118.193741),
    'Bakersfield': (35.373292, -119.018712),
    'Anaheim': (33.836594, -117.914301),
    'Santa Ana': (33.745472, -117.867653),
    'Riverside': (33.9806, -117.3755),
    'Stockton': (37.957702, -121.29078),
    'Chula Vista': (32.640054, -117.084196),
    'Irvine': (33.684567, -117.826505),
    'Fremont': (37.548269, -121.988571),
    'San Bernardino': (34.1083, -117.2898),
    'Modesto': (37.6391, -120.9969),
    'Fontana': (34.0922, -117.435),
    'Oxnard': (34.1975, -119.1771)
}

random_cities = random.sample(list(cities.keys()), 20)

associated_gages = {}
for gage_id, city in enumerate(random_cities, start=1):
    associated_cities = random.sample(list(cities.keys()), 5)
    associated_gages[gage_id] = [(cities[city][0], cities[city][1]) for city in associated_cities]

# Create DUMMY gages_data dictionary
gages_data = {
    'GageID': [i for i in range(1, 21)],
    'Name': random_cities,
    'Latitude': [cities[city][0] for city in random_cities],
    'Longitude': [cities[city][1] for city in random_cities],
    '5 associated gages': [associated_gages[i] for i in range(1, 21)]
}

df = pd.DataFrame(gages_data)

# Needed to stop window flicker
@st.cache_data
def create_map(selected_gage):
    CA_CENTER = (37.2539, -119.6144)
    map = folium.Map(location=CA_CENTER)

    row = df[df['GageID'] == selected_gage].iloc[0]
    location = row['Latitude'], row['Longitude']
    folium.Marker(location, popup=row['Name'], icon=folium.Icon(color='blue')).add_to(map)
    
    for assoc_location in row['5 associated gages']:
        folium.CircleMarker(assoc_location, radius=5, color='green', fill=True, fill_color='green').add_to(map)

    return map


# Sidebar
st.sidebar.title('The Nature Conservancy')
st.sidebar.header('Stream Flow Visualization')
st.sidebar.write("People and nature rely on the fresh water flowing through rivers for drinking, irrigation, recreation, and habitat. Using advanced machine learning techniques, the United States Geological Survey has generated monthly estimates of the amount (cubic feet per second) of water naturally flowing in all the rivers in the conterminous United States. Natural flows are the amount of water expected to flow based on rainfall and absent any human diversions or alteration. This application was developed by The Nature Conservancy to help make this data accessible through a simple map interface.")

# Sidebar content for selecting a single gage
selected_gage = st.sidebar.selectbox('Select a target gage:', df['GageID'])

# Main content area
map = create_map(selected_gage)
st_folium(map, width=700, height=500)
